# Generated by Django 3.1.4 on 2021-12-08 19:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(choices=[('F', 'FreightCar'), ('D', 'DieselLocomotive'), ('E', 'ElectricLocomotive'), ('C', 'FuelCellLocomotive')], max_length=1, null=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('number_axles', models.IntegerField(blank=True, null=True)),
                ('air_braking_max_force', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CarType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1)),
                ('description', models.CharField(max_length=100)),
                ('type', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Consist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('acquisition_cost', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConsistRouteEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_date', models.DateField(blank=True, null=True)),
                ('distance_travelled', models.FloatField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('avg_speed', models.FloatField(blank=True, null=True)),
                ('energy_cost', models.FloatField(blank=True, null=True)),
                ('operating_cost', models.FloatField(blank=True, null=True)),
                ('total_work', models.FloatField(blank=True, null=True)),
                ('fuel_consumed', models.FloatField(blank=True, null=True)),
                ('ghg_hc_emissions', models.FloatField(blank=True, null=True)),
                ('ghg_co_emissions', models.FloatField(blank=True, null=True)),
                ('ghg_no_emissions', models.FloatField(blank=True, null=True)),
                ('ghg_pm_emissions', models.FloatField(blank=True, null=True)),
                ('consist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locomotives.consist')),
            ],
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('net', models.CharField(blank=True, max_length=1, null=True)),
                ('tracks', models.CharField(blank=True, max_length=1, null=True)),
                ('city_fips', models.IntegerField(blank=True, null=True)),
                ('state_fips', models.IntegerField(blank=True, null=True)),
                ('state_abbrev', models.CharField(blank=True, max_length=2, null=True)),
                ('time_zone', models.CharField(blank=True, max_length=1, null=True)),
                ('avg_winter_temp', models.FloatField(blank=True, null=True)),
                ('avg_spring_temp', models.FloatField(blank=True, null=True)),
                ('avg_summer_temp', models.FloatField(blank=True, null=True)),
                ('avg_fall_temp', models.FloatField(blank=True, null=True)),
                ('avg_winter_pressure', models.FloatField(blank=True, null=True)),
                ('avg_spring_pressure', models.FloatField(blank=True, null=True)),
                ('avg_summer_pressure', models.FloatField(blank=True, null=True)),
                ('avg_fall_pressure', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('elev_m', models.FloatField()),
                ('smooth_elev_m', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RouteSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locomotives.route')),
            ],
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gradient', models.FloatField()),
                ('arc_distance', models.FloatField()),
                ('radius_curvature', models.FloatField()),
                ('turn_type', models.IntegerField(blank=True, null=True)),
                ('max_speed', models.FloatField(blank=True, null=True)),
                ('segment_order', models.IntegerField(null=True)),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locomotives.locality')),
                ('locations', models.ManyToManyField(to='locomotives.Location')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locomotives.route')),
            ],
        ),
        migrations.CreateModel(
            name='DieselLocomotive',
            fields=[
                ('car_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='locomotives.car')),
                ('fuel_capacity', models.FloatField(blank=True, null=True)),
                ('acquisition_cost', models.FloatField(blank=True, null=True)),
                ('max_power', models.FloatField(blank=True, null=True)),
            ],
            bases=('locomotives.car',),
        ),
        migrations.CreateModel(
            name='ElectricLocomotive',
            fields=[
                ('car_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='locomotives.car')),
                ('efficiency_in', models.FloatField(blank=True, null=True)),
                ('efficiency_out', models.FloatField(blank=True, null=True)),
                ('max_power_in', models.FloatField(blank=True, null=True)),
                ('max_power_out', models.FloatField(blank=True, null=True)),
                ('max_usuable_energy', models.FloatField(blank=True, null=True)),
                ('acquisition_cost', models.FloatField(blank=True, null=True)),
            ],
            bases=('locomotives.car',),
        ),
        migrations.CreateModel(
            name='FreightCar',
            fields=[
                ('car_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='locomotives.car')),
                ('empty_weight', models.FloatField(blank=True, null=True)),
            ],
            bases=('locomotives.car',),
        ),
        migrations.CreateModel(
            name='FuelCellLocomotive',
            fields=[
                ('car_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='locomotives.car')),
                ('fuel_type', models.CharField(blank=True, max_length=50, null=True)),
                ('fuel_capacity', models.FloatField(blank=True, null=True)),
                ('max_power', models.FloatField(blank=True, null=True)),
                ('acquisition_cost', models.FloatField(blank=True, null=True)),
            ],
            bases=('locomotives.car',),
        ),
        migrations.CreateModel(
            name='SpeedRestriction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_speed', models.FloatField(blank=True, null=True)),
                ('stop_duration', models.FloatField(blank=True, null=True)),
                ('route_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locomotives.routeschedule')),
                ('segment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locomotives.segment')),
            ],
        ),
        migrations.CreateModel(
            name='PowerToWheels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_level', models.FloatField(blank=True, null=True)),
                ('fuel_consumption', models.FloatField(blank=True, null=True)),
                ('ghg_hc_emissions', models.FloatField(blank=True, null=True)),
                ('ghg_co_emissions', models.FloatField(blank=True, null=True)),
                ('ghg_no_emissions', models.FloatField(blank=True, null=True)),
                ('ghg_pm_emissions', models.FloatField(blank=True, null=True)),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locomotives.car')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceWithEmissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_distance', models.FloatField(blank=True, null=True)),
                ('start_time', models.FloatField(blank=True, null=True)),
                ('interval_length', models.FloatField(blank=True, null=True)),
                ('interval_duration', models.FloatField(blank=True, null=True)),
                ('ending_speed', models.FloatField(blank=True, null=True)),
                ('power', models.FloatField(blank=True, null=True)),
                ('energy_cost', models.FloatField(blank=True, null=True)),
                ('operating_cost', models.FloatField(blank=True, null=True)),
                ('fuel_consumed', models.FloatField(blank=True, null=True)),
                ('ghg_hc_emissions', models.FloatField(blank=True, null=True)),
                ('ghg_co_emissions', models.FloatField(blank=True, null=True)),
                ('ghg_no_emissions', models.FloatField(blank=True, null=True)),
                ('ghg_pm_emissions', models.FloatField(blank=True, null=True)),
                ('consist_route_evaluation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locomotives.consistrouteevaluation')),
                ('segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locomotives.segment')),
            ],
        ),
        migrations.AddField(
            model_name='locality',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locomotives.route'),
        ),
        migrations.AddField(
            model_name='consistrouteevaluation',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locomotives.route'),
        ),
        migrations.CreateModel(
            name='ConsistCar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('loaded', models.BooleanField(default=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locomotives.car')),
                ('consist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locomotives.consist')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='aar_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='locomotives.cartype'),
        ),
    ]
